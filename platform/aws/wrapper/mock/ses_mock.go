// Code generated by MockGen. DO NOT EDIT.
// Source: ./ses.go

// Package mock_wrapper is a generated GoMock package.
package mock_wrapper

import (
	reflect "reflect"

	sesv2 "github.com/aws/aws-sdk-go/service/sesv2"
	gomock "github.com/golang/mock/gomock"
)

// MockSESAPI is a mock of SESAPI interface.
type MockSESAPI struct {
	ctrl     *gomock.Controller
	recorder *MockSESAPIMockRecorder
}

// MockSESAPIMockRecorder is the mock recorder for MockSESAPI.
type MockSESAPIMockRecorder struct {
	mock *MockSESAPI
}

// NewMockSESAPI creates a new mock instance.
func NewMockSESAPI(ctrl *gomock.Controller) *MockSESAPI {
	mock := &MockSESAPI{ctrl: ctrl}
	mock.recorder = &MockSESAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSESAPI) EXPECT() *MockSESAPIMockRecorder {
	return m.recorder
}

// SendEmail mocks base method.
func (m *MockSESAPI) SendEmail(input *sesv2.SendEmailInput) (*sesv2.SendEmailOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendEmail", input)
	ret0, _ := ret[0].(*sesv2.SendEmailOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendEmail indicates an expected call of SendEmail.
func (mr *MockSESAPIMockRecorder) SendEmail(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendEmail", reflect.TypeOf((*MockSESAPI)(nil).SendEmail), input)
}
