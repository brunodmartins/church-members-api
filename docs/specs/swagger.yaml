consumes:
    - application/json
definitions:
    AddressRequest:
        description: AddressRequest for HTTP calls to post a person
        properties:
            address:
                type: string
                x-go-name: Address
            city:
                type: string
                x-go-name: City
            district:
                type: string
                x-go-name: District
            moreInfo:
                type: string
                x-go-name: MoreInfo
            number:
                format: int64
                type: integer
                x-go-name: Number
            state:
                type: string
                x-go-name: State
            zipCode:
                type: string
                x-go-name: ZipCode
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    ContactRequest:
        description: ContactRequest for HTTP calls to post a person
        properties:
            cellPhone:
                format: int64
                type: integer
                x-go-name: CellPhone
            cellPhoneArea:
                format: int64
                type: integer
                x-go-name: CellPhoneArea
            email:
                type: string
                x-go-name: Email
            phone:
                format: int64
                type: integer
                x-go-name: Phone
            phoneArea:
                format: int64
                type: integer
                x-go-name: PhoneArea
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    CreateMemberRequest:
        description: CreateMemberRequest for HTTP calls to post member
        properties:
            attendsFridayWorship:
                type: boolean
                x-go-name: AttendsFridayWorship
            attendsObservation:
                type: string
                x-go-name: AttendsObservation
            attendsSaturdayWorship:
                type: boolean
                x-go-name: AttendsSaturdayWorship
            attendsSundaySchool:
                type: boolean
                x-go-name: AttendsSundaySchool
            attendsSundayWorship:
                type: boolean
                x-go-name: AttendsSundayWorship
            oldChurch:
                type: string
                x-go-name: OldChurch
            person:
                $ref: '#/definitions/CreatePersonRequest'
            religion:
                $ref: '#/definitions/CreateReligionRequest'
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    CreateMemberResponse:
        description: CreateMemberResponse for HTTP create member responses
        properties:
            id:
                type: string
                x-go-name: ID
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    CreatePersonRequest:
        description: CreatePersonRequest for HTTP calls to post a person
        properties:
            address:
                $ref: '#/definitions/AddressRequest'
            birthDate:
                type: string
                x-go-name: BirthDate
            brothersQuantity:
                format: int64
                type: integer
                x-go-name: BrothersQuantity
            childrenQuantity:
                format: int64
                type: integer
                x-go-name: ChildrenQuantity
            contact:
                $ref: '#/definitions/ContactRequest'
            fathersName:
                type: string
                x-go-name: FathersName
            firstName:
                type: string
                x-go-name: FirstName
            gender:
                type: string
                x-go-name: Gender
            lastName:
                type: string
                x-go-name: LastName
            maritalStatus:
                type: string
                x-go-name: MaritalStatus
            marriageDate:
                type: string
                x-go-name: MarriageDate
            mothersName:
                type: string
                x-go-name: MothersName
            placeOfBirth:
                type: string
                x-go-name: PlaceOfBirth
            profession:
                type: string
                x-go-name: Profession
            spousesName:
                type: string
                x-go-name: SpousesName
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    CreateReligionRequest:
        description: CreateReligionRequest for HTTP calls to post a person
        properties:
            acceptedJesus:
                type: boolean
                x-go-name: AcceptedJesus
            acceptedJesusDate:
                type: string
                x-go-name: AcceptedJesusDate
            agreesTithe:
                type: boolean
                x-go-name: AgreesTithe
            baptismDate:
                type: string
                x-go-name: BaptismDate
            baptismPlace:
                type: string
                x-go-name: BaptismPlace
            baptized:
                type: boolean
                x-go-name: Baptized
            catholicBaptized:
                type: boolean
                x-go-name: CatholicBaptized
            fathersReligion:
                type: string
                x-go-name: FathersReligion
            knowsTithe:
                type: boolean
                x-go-name: KnowsTithe
            learnedGospelAge:
                format: int64
                type: integer
                x-go-name: LearnedGospelAge
            tithe:
                type: boolean
                x-go-name: Tithe
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    CreateUserRequest:
        description: CreateUserRequest for HTTP calls to post user
        properties:
            email:
                type: string
                x-go-name: Email
            password:
                type: string
                x-go-name: Password
            phone:
                type: string
                x-go-name: Phone
            role:
                type: string
                x-go-name: Role
            send_daily_sms:
                type: boolean
                x-go-name: SendDailySMS
            send_weekly_email:
                type: boolean
                x-go-name: SendWeeklyEmail
            username:
                type: string
                x-go-name: UserName
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    ErrorResponse:
        description: ErrorResponse for HTTP error responses
        properties:
            error:
                type: string
                x-go-name: Error
            message:
                type: string
                x-go-name: Message
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    GetAddressResponse:
        description: GetAddressResponse for HTTP get address response
        properties:
            address:
                type: string
                x-go-name: Address
            city:
                type: string
                x-go-name: City
            district:
                type: string
                x-go-name: District
            full:
                type: string
                x-go-name: Full
            number:
                format: int64
                type: integer
                x-go-name: Number
            state:
                type: string
                x-go-name: State
            zipCode:
                type: string
                x-go-name: ZipCode
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    GetContactResponse:
        description: GetContactResponse for HTTP get contact response
        properties:
            cellphone:
                type: string
                x-go-name: Cellphone
            email:
                type: string
                x-go-name: Email
            phone:
                type: string
                x-go-name: Phone
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    GetMemberResponse:
        description: GetMemberResponse for HTTP get member responses
        properties:
            active:
                type: boolean
                x-go-name: Active
            classification:
                type: string
                x-go-name: Classification
            id:
                type: string
                x-go-name: ID
            person:
                $ref: '#/definitions/GetPersonResponse'
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    GetPersonResponse:
        description: GetPersonResponse for HTTP get person response
        properties:
            address:
                $ref: '#/definitions/GetAddressResponse'
            age:
                format: int64
                type: integer
                x-go-name: Age
            birthDate:
                format: date-time
                type: string
                x-go-name: BirthDate
            contact:
                $ref: '#/definitions/GetContactResponse'
            firstName:
                type: string
                x-go-name: FirstName
            fullName:
                type: string
                x-go-name: FullName
            gender:
                type: string
                x-go-name: Gender
            lastName:
                type: string
                x-go-name: LastName
            maritalStatus:
                type: string
                x-go-name: MaritalStatus
            marriageDate:
                format: date-time
                type: string
                x-go-name: MarriageDate
            spousesName:
                type: string
                x-go-name: SpousesName
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    GetTokenResponse:
        description: GetTokenResponse for HTTP get token responses
        properties:
            token:
                type: string
                x-go-name: Token
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    NotificationPreferences:
        properties:
            send_daily_sms:
                type: boolean
                x-go-name: SendDailySMS
            send_weekly_email:
                type: boolean
                x-go-name: SendWeeklyEmail
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/domain
    RetireMemberRequest:
        description: RetireMemberRequest for HTTP calls to put member status
        properties:
            date:
                format: date-time
                type: string
                x-go-name: RetireDate
            reason:
                type: string
                x-go-name: Reason
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
    UpdatePersonRequest:
        description: UpdatePersonRequest for HTTP calls to put a person
        properties:
            birthDate:
                type: string
                x-go-name: BirthDate
            childrenQuantity:
                format: int64
                type: integer
                x-go-name: ChildrenQuantity
            firstName:
                type: string
                x-go-name: FirstName
            lastName:
                type: string
                x-go-name: LastName
            maritalStatus:
                type: string
                x-go-name: MaritalStatus
            marriageDate:
                type: string
                x-go-name: MarriageDate
            spousesName:
                type: string
                x-go-name: SpousesName
        type: object
        x-go-package: github.com/brunodmartins/church-members-api/internal/constants/dto
host: localhost:8080
info:
    description: This API manages the members of a church.
    title: church-members-api
    version: 1.0.0
paths:
    /members:
        get:
            description: Search member
            operationId: searchMember
            parameters:
                - description: The member names
                  in: query
                  name: name
                - description: The member status active [true,false]
                  in: query
                  name: active
                - description: The member gender [M,F]
                  in: query
                  name: gender
            produces:
                - application/json
            responses:
                "200":
                    description: Members found
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
        post:
            description: Register the receiving member
            operationId: postMember
            parameters:
                - description: The member to be registered
                  in: body
                  name: member
                  required: true
                  schema:
                    $ref: '#/definitions/CreateMemberRequest'
            produces:
                - application/json
            responses:
                "201":
                    description: Member registered
                    schema:
                        $ref: '#/definitions/CreateMemberResponse'
                "400":
                    description: Invalid request
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Create member
    /members/{id}:
        delete:
            description: Retire a member from the church
            operationId: retireMember
            parameters:
                - description: The member id
                  in: path
                  name: id
                  required: true
                - description: The retire information
                  in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/RetireMemberRequest'
            produces:
                - application/json
            responses:
                "200":
                    description: Status change successfully
                "400":
                    description: Invalid request
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                "404":
                    description: Member not found
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Retire Member
        get:
            description: Returns the member information
            operationId: getMember
            parameters:
                - description: The member id
                  in: path
                  name: id
                  required: true
            produces:
                - application/json
            responses:
                "200":
                    description: The member information
                    schema:
                        $ref: '#/definitions/GetMemberResponse'
                "400":
                    description: Invalid ID
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                "404":
                    description: Member not found
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Get member
    /members/{id}/address:
        put:
            description: Update the address for the given member
            operationId: updateAddress
            parameters:
                - description: The member id
                  in: path
                  name: id
                  required: true
                - description: The address to be updated
                  in: body
                  name: member
                  required: true
                  schema:
                      $ref: '#/definitions/AddressRequest'
            produces:
                - application/json
            responses:
                "200":
                    description: Address updated
                "400":
                    description: Invalid request
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                "404":
                    description: Member not found
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: [ ]
            summary: Update member - Address
    /members/{id}/contact:
        put:
            description: Update the contact for the given member
            operationId: updateContact
            parameters:
                - description: The member id
                  in: path
                  name: id
                  required: true
                - description: The contact to be updated
                  in: body
                  name: member
                  required: true
                  schema:
                      $ref: '#/definitions/ContactRequest'
            produces:
                - application/json
            responses:
                "200":
                    description: Contact updated
                "400":
                    description: Invalid request
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                "404":
                    description: Member not found
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Update member - Contact
    /members/{id}/person:
        put:
            description: Update the person for the given member
            operationId: updatePerson
            parameters:
                - description: The member id
                  in: path
                  name: id
                  required: true
                - description: The person to be updated
                  in: body
                  name: member
                  required: true
                  schema:
                      $ref: '#/definitions/UpdatePersonRequest'
            produces:
                - application/json
            responses:
                "200":
                    description: Person updated
                "400":
                    description: Invalid request
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                "404":
                    description: Member not found
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: [ ]
            summary: Update member - Person
    /reports/{reportType}:
        get:
            description: Returns a report file url
            operationId: getURLForReport
            parameters:
                - description: The report type [members,legal,classification,birthdate,marriage]
                  in: path
                  name: reportType
                  required: true
            produces:
                - application/json
            responses:
                "307":
                    description: S3 url to redirect
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Get a report file
    /reports/members:
        post:
            description: Generates a PDF member report
            operationId: generateMembersReport
            produces:
                - application/pdf
            responses:
                "200":
                    description: PDF report
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Member report
    /reports/members/birthday:
        post:
            description: Generates a CSV birthday report
            operationId: generateBirthDayReport
            produces:
                - application/csv
            responses:
                "200":
                    description: CSV report
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Birthday report
    /reports/members/classification/{classification}:
        post:
            description: Generates a PDF member report by classification
            operationId: generateClassificationReport
            parameters:
                - description: The member classification [adult, teen, young, children]
                  in: path
                  name: classification
                  required: true
            produces:
                - application/pdf
            responses:
                "200":
                    description: PDF report
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Member report
    /reports/members/legal:
        post:
            description: Generates a PDF legal report
            operationId: generateLegalReport
            produces:
                - application/pdf
            responses:
                "200":
                    description: PDF report
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Legal report
    /reports/members/marriage:
        post:
            description: Generates a CSV Marriage report
            operationId: generateMarriageReport
            produces:
                - application/csv
            responses:
                "200":
                    description: CSV report
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Marriage report
    /users:
        post:
            description: Register the receiving user
            operationId: postUser
            parameters:
                - description: The user to be registered
                  in: body
                  name: user
                  required: true
                  schema:
                    $ref: '#/definitions/CreateUserRequest'
            produces:
                - application/json
            responses:
                "201":
                    description: User registered
                "400":
                    description: Invalid request
                    schema:
                        $ref: '#/definitions/ErrorResponse'
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - token: []
            summary: Create a user
    /users/token:
        get:
            description: Generates a token for a given user
            operationId: getToken
            produces:
                - application/csv
            responses:
                "201":
                    description: Token generated
                default:
                    description: unexpected error
                    schema:
                        $ref: '#/definitions/ErrorResponse'
            security:
                - login: []
            summary: Get a user Token
produces:
    - application/json
    - application/csv
    - application/pdf
schemes:
    - http
security:
    - login: []
    - token: []
securityDefinitions:
    login:
        type: basic
    token:
        in: header
        name: X-Auth-Token
        type: apiKey
swagger: "2.0"
